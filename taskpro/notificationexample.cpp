/*
 * Copyright © 2011 Nokia Corporation. All rights reserved.
 * Nokia and Nokia Connecting People are registered trademarks of Nokia Corporation. 
 * Product and company names mentioned herein may be 
 * trademarks or trade names of their respective owners.
 * Subject to the conditions below, you may, without charge:
 * • Use, copy, modify and/or merge copies of this software and 
 * associated documentation files (the “Software”)
 * • Publish, distribute, sub-licence and/or sell new software 
 * derived from or incorporating the Software.
 * This file, unmodified, shall be included with all copies or substantial portions
 * of the Software that are distributed in source code form.
 * The Software cannot constitute the primary value of any new software derived 
 * from or incorporating the Software.
 * Any person dealing with the Software shall not misrepresent the source of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, 
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT 
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION 
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE 
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */


#include <QtGui>
#include "qmessagebox.h"
#include <QPluginLoader>
#include <QHttpRequestHeader>
#include <QNetworkRequest>
#include <QNetworkReply>
#include <QNetworkProxy>

// Notifications
#include <ovinotificationinterface.h>
#include <ovinotificationsession.h>
#include <ovinotificationinfo.h>
#include <ovinotificationmessage.h>
#include <ovinotificationstate.h>
#include <ovinotificationpayload.h>

#include "notificationexample.h"

/*
* You can request your own application and service id from:
* https://projects.forum.nokia.com/notificationsapi/wiki/registerservice
*
* Public "example.com" service can be used for testing.
* Sending Notification Id to "example.com" service is not supported.
*/

const QString application_id = "com.kmdarshan";
const QString service_id = "kmdarshan.com";

/* HTTP Proxy definition, if needed for sending notifications.
   If left empty, system wide proxy configuration will be used
 */
const QString http_proxy = "";
const int proxy_port = 8080;

NotificationExample::NotificationExample()
{

    iHttpManager = new QNetworkAccessManager(this);
    connect(iHttpManager, SIGNAL(sslErrors(QNetworkReply *, QList<QSslError>)),
            this, SLOT(sslErrors(QNetworkReply *, QList<QSslError>)));

#ifndef Q_OS_SYMBIAN
    if (http_proxy != "")
    {
        QNetworkProxy proxy(QNetworkProxy::HttpProxy, http_proxy, proxy_port);
        iHttpManager->setProxy(proxy);
    }

    else
    {
        QNetworkProxyFactory::setUseSystemConfiguration (true);
    }
#endif

    // Connect to Notifications
    bool success = initialize();

    iIconData =
            "";

    // Update the status to the screen.
    if (!success)
    {
        displayErrorbox("OviServiceInterace was not loaded.");
    }
    else
    {
        displayErrorbox("Ready.");
    }
}

void NotificationExample::displayErrorbox(QString qError)
{
    QMessageBox::information(this, tr("Error"),
                             qError);
}
NotificationExample::~NotificationExample()
{
    //delete ui;
    if ( iHttpManager )
    {
        delete iHttpManager;
        iHttpManager = NULL;
    }

    if (iNotificationSession)
    {
        delete iNotificationSession;
        iNotificationSession = NULL;
    }
}

void NotificationExample::on_registerButton_clicked()
{
    // Register to Notifications
    displayErrorbox("Registering to Notifications ...");
    iNotificationSession->registerApplication(application_id);
}

void NotificationExample::on_unregisterButton_clicked()
{
    // Unregister from Notifications
    displayErrorbox("Unregistering from Notifications...");
    iNotificationSession->unregisterApplication();
}

void NotificationExample::on_notificationIdButton_clicked()
{
    // Request notification address for this application
    displayErrorbox("Requesting notification info...");
    iNotificationSession->getNotificationInformation(service_id);
}

void NotificationExample::on_sendNotificationIdButton_clicked()
{
    if (application_id == "com.example"
        && service_id == "example.com")
    {
       displayErrorbox("To send Notification Id to developer console, "
                                 "you must request your own application and service id from: "
                                 "https://projects.forum.nokia.com/notificationsapi/wiki/registerservice");
    }
    else
    {

        if (iNotificationId.isEmpty())
        {
            displayErrorbox("Get Notification Id first by pressing \"Get NID\" button. ");
        }
        else
        {
            displayErrorbox("Sending NID to service..");
            QByteArray dataArray = QUrl::toPercentEncoding( iNotificationId );
            QString post_url = "https://account.nnapi.ovi.com/cm/ext/addnid";
            QString post_data = "nid=" + dataArray + "&sid=" + service_id;
            QUrl qUrl(post_url);
            iHttpManager->post(QNetworkRequest(qUrl), post_data.toLatin1());
            displayErrorbox("Notification Id: '" + iNotificationId + "' sent to service.");
        }

    }
}

void NotificationExample::on_settingsButton_clicked()
{
    displayErrorbox("Notification UI: " + QString::number(iNotificationSession->isNotificationUi())
                            + " Wakeup: " + QString::number(iNotificationSession->isWakeUp()));
}

void NotificationExample::on_notificationUiCheckBox_stateChanged(int state )
{
    if(state == Qt::Checked)
    {
        iNotificationSession->setNotificationUi(true, iIconData);
    }
    else
    {
        iNotificationSession->setNotificationUi(false, iIconData);
    }
}

void NotificationExample::on_wakeupCheckBox_stateChanged(int state )
{
    if(state == Qt::Checked)
    {
        iNotificationSession->setWakeUp(true);
    }
    else
    {
        iNotificationSession->setWakeUp(false);
    }
}

void NotificationExample::on_notificationIconSelectionBox_highlighted(QString item)
{
    if(item == "GIF")
    {
       iIconData = "R0lGODlhQABAAPcAAPb3+fH09/b4+vz9/vr7/Pn6+/j5+urv8+/z9sbV39Le5tji6d7n7d3m7OXs8eju8vT3+fP2+LPI1cHS3cvZ4s/c5Nbh6Ja0xZ25ya/CzbvO2cPU3sLT3cjX4Mza4tXh6Nnk6tfi6OXs8Ovw84Swx9He5dzm6+Pr7+vx9O7z9ff6+/v8/P////7+/gwAAAAAQABAAAAI/wBJCBxIsKDBgwgTKkzYoqHDhxAjSpxIsSLFFRgzatzIsaPHjyA/qhhJsqTJkyhTqlypEoLLlzBjypxJs6bNmgFy6tzJs6fPn0CDAk1BtKjRo0iTKl3KtKnTp1CjKkVBtarVq1izat3KdeuBr2DDih1LtqzZs2YfqF3Ltq3bt3Djyo17oq7du3jz6t3Lty9fBoADCx5MuLDhw4gPg1jMuLHjx5AjS54sOYTly5gza97MubPnz6BDix7N+YPp06hTq17NurXr17Bjy55Nu7bt27hz697Nu7fv38CDx2ZBvLjx48iTK1/OvLnz59CjS59Ovbr169iza9/Ovbv37+DDizAfT768+fPo06tfz769+/fw48ufT7++/fv48+vfz7+///8ABijggAQWaOCBCCZoYEAAOw==";
    }
    else if (item == "JPEG")
    {
       iIconData = "/9j/4AAQSkZJRgABAQEAYABgAAD/4QBGRXhpZgAASUkqAAgAAAABAGmHBAABAAAAGgAAAAAAAAABAIaSAgASAAAALAAAAAAAAABDcmVhdGVkIHdpdGggR0lNUAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwgJC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCAA6ADsDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD1voalhtZZ/ujj1NSWVt9ofc33F5PvWuoVBtUAAdhTGUY9LXH7xyT7VJ/Zdv3D/nVzIo3CkBnvpEJB2sw+tUbjTpoVLAbl9RWrf3X2OxnuTG0nlIX2J1bA6Csfwt4im8QWVxNc6dJZPFJsCsdwkHqDgUubWwr9CoTTcGtfUbBWRriIYI5KjuKx92PU1Qzo7EiOzix/Eu4/jzXL+MfEV7Y3VppWnuIri5wWlwDsBIHH61t6XObi12KR5kXyMufTofyrnPFWkSPrtjqzCTyoVVCEGcbWJGfzNcuLm4Um1oZ1U2rIq6ne634Tv7JpdTlv7W4yJFkXkHvg/wAqu+FNV1RtbvrTUbh5ogpMLSEdj/gc/hTtdl/tqayt7IeYwOScfdz61V14voOsRXKRSS+ZAVAjwATgjkmvMlXmqjlT1irHO7xfNfQelzqd/HrV2uqXEcUW7yVQKAuM8DI/WtPwTNeXVlcNeXUs5EgwZMZAx7AUun2Etv4InVYhFdSwOxVm3YYg4yaTwHZ31pptwL6WOR2lypjHAGK3pOarQu91cqPNzxOqKgjHbpXIzny7iRAD8rkfrXV3EyW8LzSEKiKSSa48SPMWlLBTIxfBHTJzXqnSPMk9pci7teZBw6f3x/jXTWV1FqNos6qdrcFXGCD6EVzZrf0XnTx/10b+dDSasMupbxRklIkQnuqgUkkEUwAljRwpyNy5wayNW15bSQ2toonuz1H8KD3NZo1/WwMfZLYk999SopKyQrdDrCq7cYGCMEe1QTT21hAzyukMY5yeK5aTVNdn4823twe6qSaq/YvNk827mkuXznMjfKPwp8qvcZcvdSk1mUKgaOxU8Z4Mv/1qTavdST7UnA4/KiqAU0w316LY2Vt+5RmZnl7gE9BTv4aU9T9aAIYII7aMpGMZOSTySfU1NSA9KWiwBRRRQAlFKKD1oA//2Q==";
    }
    else if (item == "PNG")
    {
       iIconData = "iVBORw0KGgoAAAANSUhEUgAAADIAAAAMCAIAAACvLXk7AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQuSURBVEhLxZX9T1tlFMfv/NWY+IPJ/gBNiNFkvywZTIyJCkQgRJnAhIBYy6AZ8tLymsJYZYNRoEMoLSxIoE4pCkJAdCm1FBjvLy0MCqXgGsKrLTCg9/3l8dyysE1/ZfHk3pPnPPd5nvO553vaew7xAnYOwzAEN4a9IjoYwow4+f8ZEgT/xSMBiRfv9y+aj0M7x4TrgJ3fOjCu8jjz7wVnHmMi01OiZ4dvEujhDqqd8iot7iiD/cNfNqMsxMd/srmPUP48uvwb/2j75aJhwOR6gjZxwboj2PaQ47Hd/tj9+wbq30afDKA37nuCzcz1WRQ7QAZobR+U/Zp8q6HuXuvi3pkX6IUDAQt1jw6ljKLBXVTmQI0O4rMhX0APif1E32nVBuuGpZqWeLlSnpbUUnNLXZQhT4sPkyn3eXSw583Ly9vf34cTNjY2PB7P8PAwTdNtbW3PZ+B5XhAFeWpjY2MwgslTPz09XVFRsb6+/vwuEWtzdfHtltVX232YzvlauSm4oj264NsbRbk3i/Oyr0tKbhRKJEnh1xRBOdp3VH+EGreW/2Zhl0KuAB8TEzM4OBgREbG0tGQ0GrOysiIjIysrK9PT06VSaU9PT05Ojs/ni4uL0+v1iYmJ5eXlDQ0NhYWFKpVKo9H09/d3dnYqlcqmpqbR0dGqqqqQkBA4VsTadjtV+nufJsQmxYYGXgz4WprwRWy4JC01NKP0o+yCYl1J6g9V35jtF66Vfq55YLL2Lqxuw6671XfNZnN3d3dQUNDc3NzU1FRjYyOO43V1dTKZrKOjY3Z2Vi6XR0dH5+fnR0VFabVaiUTS3NysVquhNsnJyfX19QMDAwaDAVZmZmZWV1eXlpYqFIqVlRURq2d49jvNzcSUhJj46LfCwiLULYG6qas/Nlw2PCz4ucYyaModoVO+N78f/O7tqsqVhUVEsAIj6uJwOMCTJHlSf1DwNNz0G4Rerxckoyhqfn4eRD9dcHR0lJ2dDdLDDGCBP9FxeXnZXy0ezW0xGTWtcV/Gxl8Nv1RUez5C+vqVvCtWXt9vK9FUy4tTa3U6l30SUTTiBETxiIY/FATvBG0B2plMpoWFhZMxQRCQw2azQQhtBAaFBD6Xy+V2u6E2drsd0judTpDv+PgYtgwNDUEIj2ZmZk7bC+MIljvwKCyHgV9lvCkrw2SthVlJF967WHzn9oNu4/72BqIoRHM8yXEEjUhOoHmeFhv26PCwr68PGgvez2q1gh8ZGZmcnIR8UMWurq6JiQnIB492d3chBHTIDQ20trYGA4vFAnzABOjj4+MwDy3xDAt/gh96Pe6/lovv95aoy9tba3t7OxFFIIrhSZbBKZYgBZIWKEagaYHheEbgoVr+n9LLM4zBaRanOJxENIlYDrE8KMWLHJSfgxIYUmCgmcR+AiDwAuvH+s/H4Awp/wFDMVeqa7TkRQAAAABJRU5ErkJggg==";
    }
    else if(item == "SVG")
    {
       iIconData = "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+DQo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMSBUaW55Ly9FTiIgImh0dHA6Ly93d3cudzMub3JnL0dyYXBoaWNzL1NWRy8xLjEvRFREL3N2ZzExLXRpbnkuZHRkIj4NCjxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIgYmFzZVByb2ZpbGU9InRpbnkiIGhlaWdodD0iMTI4IiB2ZXJzaW9uPSIxLjAiIHdpZHRoPSIxMjgiPg0KPGRlZnM+DQo8bGluZWFyR3JhZGllbnQgaWQ9ImxpbmVhckdyYWRpZW50MjI1NSI+DQo8c3RvcCBvZmZzZXQ9IjAiIHN0eWxlPSJzdG9wLWNvbG9yOiMwMDNmYTI7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8c3RvcCBvZmZzZXQ9IjEiIHN0eWxlPSJzdG9wLWNvbG9yOiMyYjdlZmY7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8L2xpbmVhckdyYWRpZW50Pg0KPGxpbmVhckdyYWRpZW50IGlkPSJsaW5lYXJHcmFkaWVudDIzODEiPg0KPHN0b3Agb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojMDAwMDAwO3N0b3Atb3BhY2l0eToxOyIvPg0KPHN0b3Agb2Zmc2V0PSIxIiBzdHlsZT0ic3RvcC1jb2xvcjojMDAwMDAwO3N0b3Atb3BhY2l0eTowOyIvPg0KPC9saW5lYXJHcmFkaWVudD4NCjxsaW5lYXJHcmFkaWVudCBpZD0ibGluZWFyR3JhZGllbnQyMzA4Ij4NCjxzdG9wIG9mZnNldD0iMCIgc3R5bGU9InN0b3AtY29sb3I6IzBlMDAwMDtzdG9wLW9wYWNpdHk6MTsiLz4NCjxzdG9wIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6IzBlMDAwMDtzdG9wLW9wYWNpdHk6MDsiLz4NCjwvbGluZWFyR3JhZGllbnQ+DQo8bGluZWFyR3JhZGllbnQgaWQ9ImxpbmVhckdyYWRpZW50MjI5OCI+DQo8c3RvcCBvZmZzZXQ9IjAiIHN0eWxlPSJzdG9wLWNvbG9yOiMwZTAwMDA7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8c3RvcCBvZmZzZXQ9IjAuNjMxODY4MTIiIHN0eWxlPSJzdG9wLWNvbG9yOiM0YjAwMDA7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8c3RvcCBvZmZzZXQ9IjEiIHN0eWxlPSJzdG9wLWNvbG9yOiM5NTAwMDA7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8L2xpbmVhckdyYWRpZW50Pg0KPGxpbmVhckdyYWRpZW50IGlkPSJsaW5lYXJHcmFkaWVudDI0NTAiPg0KPHN0b3Agb2Zmc2V0PSIwIiBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZmZmO3N0b3Atb3BhY2l0eToxOyIvPg0KPHN0b3Agb2Zmc2V0PSIxIiBzdHlsZT0ic3RvcC1jb2xvcjojZmZmZmZmO3N0b3Atb3BhY2l0eTowOyIvPg0KPC9saW5lYXJHcmFkaWVudD4NCjxsaW5lYXJHcmFkaWVudCBpZD0ibGluZWFyR3JhZGllbnQyNDM0Ij4NCjxzdG9wIG9mZnNldD0iMCIgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmZmZjtzdG9wLW9wYWNpdHk6MTsiLz4NCjxzdG9wIG9mZnNldD0iMSIgc3R5bGU9InN0b3AtY29sb3I6I2ZmZmZmZjtzdG9wLW9wYWNpdHk6MDsiLz4NCjwvbGluZWFyR3JhZGllbnQ+DQo8bGluZWFyR3JhZGllbnQgaWQ9ImxpbmVhckdyYWRpZW50MjMxOSI+DQo8c3RvcCBvZmZzZXQ9IjAiIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmZiZmI7c3RvcC1vcGFjaXR5OjE7Ii8+DQo8c3RvcCBvZmZzZXQ9IjEiIHN0eWxlPSJzdG9wLWNvbG9yOiNmZmZiZmI7c3RvcC1vcGFjaXR5OjA7Ii8+DQo8L2xpbmVhckdyYWRpZW50Pg0KPHJhZGlhbEdyYWRpZW50IGN4PSI2My45MTIyMDkiIGN5PSIxMTUuNzA5MTkiIGZ4PSIxNC4wNDY2MzkiIGZ5PSIxMTUuNzA5MTkiIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMSwwLDAsMC4xOTc4MDIsMCw5Mi44MjE2NikiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiBpZD0icmFkaWFsR3JhZGllbnQzMjk3IiByPSI2My45MTIyMDkiIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDMyOTEiLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgaWQ9ImxpbmVhckdyYWRpZW50MjMwNCIgeDE9IjExLjg5ODc1MyIgeDI9IjExNS44NzgwMSIgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MjI5OCIgeTE9IjEyNC44MTk1MSIgeTI9IjE5LjM0MDkyNSIvPg0KPGxpbmVhckdyYWRpZW50IGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiBpZD0ibGluZWFyR3JhZGllbnQyMzE0IiBzcHJlYWRNZXRob2Q9InJlZmxlY3QiIHgxPSI5OS4yMTk5MzMiIHgyPSI4OS4wNDM0MzQiIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDIzMDgiIHkxPSI0NC4xODY1ODQiIHkyPSIzNC4wMTAwODYiLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgaWQ9ImxpbmVhckdyYWRpZW50MjMzOCIgeDE9Ijc4LjMyMTkzOCIgeDI9IjQyLjIyMDQ0NCIgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MjMzMiIgeTE9IjQzLjEwMTQwNiIgeTI9IjUzLjUyOTc3OCIvPg0KPHJhZGlhbEdyYWRpZW50IGN4PSI0OS4zNzA2ODYiIGN5PSI4Mi42NDY3ODIiIGZ4PSI0OS4zNzA2ODYiIGZ5PSI4Mi42NDY3ODIiIGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMS4wMjEzMzgsLTAuNTAyMDgsMC4zMTIyMDMsMC42MzUwODUsLTI4LjQxMzI0LDQzLjk0MjM4KSIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIGlkPSJyYWRpYWxHcmFkaWVudDIzNDYiIHI9IjI0LjAxNTc1OCIgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MjQxOCIvPg0KPGxpbmVhckdyYWRpZW50IGdyYWRpZW50VHJhbnNmb3JtPSJtYXRyaXgoMS4wMzA1OCwwLDAsMS4wMzA1OCwtMy4wNjcwOTksLTEuMjAzMDA5KSIgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIGlkPSJsaW5lYXJHcmFkaWVudDIzNDkiIHgxPSI1MS4wODE0MjUiIHgyPSI1My4yMDI0NDYiIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDI0NTAiIHkxPSI2Ny45MTE2MjEiIHkyPSI5My4zNjgxMDMiLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDEuMDMwNTgsMCwwLDEuMDMwNTgsLTMuMDY3MDk5LC0xLjIwMzAwOSkiIGdyYWRpZW50VW5pdHM9InVz"
"ZXJTcGFjZU9uVXNlIiBpZD0ibGluZWFyR3JhZGllbnQyMzUzIiB4MT0iNjEuNTkzNzUiIHgyPSI4My4xMDQ3NzQiIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDI0NDIiIHkxPSI0NS40Njk4NDUiIHkyPSI2NS44NTA2NDciLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDEuMDMwNTgsMCwwLDEuMDMwNTgsLTMuMDY3MDk5LC0xLjIwMzAwOSkiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiBpZD0ibGluZWFyR3JhZGllbnQyMzU3IiB4MT0iODguODg0MTQ4IiB4Mj0iMTA3LjU2OTI1IiB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQyNDM0IiB5MT0iMjEuMDgyOTA1IiB5Mj0iNDIuMzM5MjQxIi8+DQo8bGluZWFyR3JhZGllbnQgZ3JhZGllbnRUcmFuc2Zvcm09Im1hdHJpeCgxLjAzMDU4LDAsMCwxLjAzMDU4LC0zLjA2NzA5OSwtMS4yMDMwMDkpIiBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgaWQ9ImxpbmVhckdyYWRpZW50MjM2MSIgeDE9IjgwLjY0MjE5NyIgeDI9IjY3LjE2MDA4IiB4bGluazpocmVmPSIjbGluZWFyR3JhZGllbnQyMzE5IiB5MT0iMTI2LjAyMTIiIHkyPSI3My4zNjg1MTUiLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFRyYW5zZm9ybT0ibWF0cml4KDEuMDMwNTgsMCwwLDEuMDMwNTgsLTMuMDY3MDk5LC0xLjIwMzAwOSkiIGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiBpZD0ibGluZWFyR3JhZGllbnQyMzY0IiB4MT0iOTEuMzM1NDE5IiB4Mj0iNjAuNjY3NzciIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDIzMTkiIHkxPSIxMTIuNDYzNzIiIHkyPSI2Ny42NDAwMDciLz4NCjxsaW5lYXJHcmFkaWVudCBncmFkaWVudFVuaXRzPSJ1c2VyU3BhY2VPblVzZSIgaWQ9ImxpbmVhckdyYWRpZW50MjM4NyIgeDE9Ijc2LjUxMjM1MiIgeDI9IjY0Ljc5MDQwNSIgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MjM4MSIgeTE9IjU4Ljk0NzA3MSIgeTI9IjEwMC4wMDk0MSIvPg0KPGxpbmVhckdyYWRpZW50IGdyYWRpZW50VW5pdHM9InVzZXJTcGFjZU9uVXNlIiB4MT0iLTEwMi4xODQzOSIgeDI9Ii0yNy4yMDI2NzUiIHhsaW5rOmhyZWY9IiNsaW5lYXJHcmFkaWVudDIyOTgiIHkxPSItNDEuODQyMyIgeTI9Ii00MS44NDIzIi8+DQo8bGluZWFyR3JhZGllbnQgZ3JhZGllbnRVbml0cz0idXNlclNwYWNlT25Vc2UiIGlkPSJsaW5lYXJHcmFkaWVudDIyNjEiIHgxPSItMzIuMzIzNTU5IiB4Mj0iLTM3LjY2NjM4OSIgeGxpbms6aHJlZj0iI2xpbmVhckdyYWRpZW50MjI1NSIgeTE9IjE5MS44NDExMSIgeTI9IjE2MC43MTIxIi8+DQo8L2RlZnM+DQo8Zz4NCjxwYXRoIGQ9Ik0gNDIuNzY5NTEsNzEuNTY3MTc3IEMgMzcuMjIzMjI1LDc0LjM0NzQ4OSAzMi4zMzMxNjQsNzguMTU3MTU4IDI3LjkxMzE0Miw4Mi41NDg2OTQgQyAyNy4xMzgzNTUsODMuMjU5ODAxIDI4Ljc5NjA0NCw4NC4xNTc1NTkgMjkuMjEwODI2LDg0LjAzMjk4NCBDIDMyLjEyMDM5OCw4Mi45NDc2ODEgMzQuMjQzMzE4LDgzLjU2Njc4NiAzNy4xNTI4OTEsODIuNDgxNDgyIiBzdHlsZT0iZmlsbDojMjgwMDAwO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjc5MDA2MDY0cHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA1MC44OTI3OTksMy4yODEyOTU5IEwgNTAuODkyNzk5LDAuNDg2NTg3NDcgTCA1MC44OTI3OTksMy4yODEyOTU5IHogIiBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eTowLjc1Njg4MDc2O2ZpbGwtcnVsZTpub256ZXJvO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDowLjU7c3Ryb2tlLWxpbmVjYXA6cm91bmQ7c3Ryb2tlLWxpbmVqb2luOnJvdW5kO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjQ7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSAxMjcuODI0NDIgMTE1LjcwOTE5IEEgNjMuOTEyMjA5IDEyLjY0MTk3NSAwIDEgMSAgMCwxMTUuNzA5MTkgQSA2My45MTIyMDkgMTIuNjQxOTc1IDAgMSAxICAxMjcuODI0NDIgMTE1LjcwOTE5IHoiIHN0eWxlPSJvcGFjaXR5OjAuMzgxMzk1MzU7ZmlsbDp1cmwoI3JhZGlhbEdyYWRpZW50MzI5Nyk7ZmlsbC1vcGFjaXR5OjEuMDtmaWxsLXJ1bGU6bm9uemVybztzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MDtzdHJva2UtbGluZWNhcDpyb3VuZDtzdHJva2UtbGluZWpvaW46cm91bmQ7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6NDtzdHJva2Utb3BhY2l0eToxIiB0cmFuc2Zvcm09Im1hdHJpeCgxLDAsMCwwLjQxNjY2NywwLDc0Ljg3MTUxKSIvPg0KPGcgdHJhbnNmb3JtPSJtYXRyaXgoMC40ODM0MDIsMC41Mzc3NywtMC43MTM3OTgsMC42NDE2MzQsMTY2Ljg3NTQsOC4zOTMwMjcpIj4NCjxwYXRoIGQ9Ik0gLTQwLDE1NS40Mjk2OCBDIC0zNi44MzMzMzMsMTUyLjAwOTQ3IC0zMi40MjYxMzEsMTUyLjM3NTkyIC0yOSwxNTUuNDI5NjggQyAtMjUuNTczODY5LDE1OC40ODM0NCAtMTkuMTMxODE1LDE2Ny43OTM3MyAtMTkuNjMxODE1LDE3Ni4yMjIxMiBDIC0yMC4xMzE4MTUsMTg0LjY1MDUxIC0yMS43OTQyNTEsMTkwLjY3OTEgLTMwLjIxMTIzMiwxOTguOTkzMTYgQyAtNDAuMDE5OTUsMTkyLjMwMjg3IC00NS42MTY3ODIsMTg2LjM4OTE2IC00Ni45NTAxMTUsMTc3Ljk2MDc3IEMgLTQ4LjI4MzQ0OCwxNjkuNTMyMzggLTQzLjE2NjY2NywxNTguODQ5OSAtNDAsMTU1LjQyOTY4IHogIiBzdHlsZT0iZmlsbDojYjVhOGE4O2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MTtvcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gLTM4LjAxMTMzMSwxNTQuODYzMjYgQyAtMzUuODU1NzYzLDE1Mi41MzUxIC0zMi44NTU3NTcsMTUyLjc4NDU1IC0zMC41MjM1NzEsMTU0Ljg2"
"MzI2IEMgLTI4LjE5MTM4NSwxNTYuOTQxOTcgLTIzLjY3Nzg2MiwxNjEuNTk4MjkgLTI0LjAxODIxNCwxNjcuMzM1NTQgQyAtMjQuMzU4NTY3LDE3My4wNzI3OSAtMjYuNjk2ODczLDE4MS4zODk0OSAtMzIuNDQyMDM4LDE4Ny4xMzQ2NiBDIC0zNy45NjU1NjksMTgzLjE1NzU1IC00My40MDY0NTksMTc1LjI4NzgxIC00NC4zMTQwNjYsMTY5LjU1MDU2IEMgLTQ1LjIyMTY3MywxNjMuODEzMzEgLTQwLjE2Njg5OCwxNTcuMTkxNDIgLTM4LjAxMTMzMSwxNTQuODYzMjYgeiAiIHN0eWxlPSJmaWxsOnVybCgjbGluZWFyR3JhZGllbnQyMjYxKTtmaWxsLW9wYWNpdHk6MS4wO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MTtvcGFjaXR5OjAuNDA1NzM3NyIvPg0KPHBhdGggZD0iTSAtMzcuMzkyNDg5LDE1NC43NDkzMyBDIC0zNi4xMTc0ODQsMTUzLjM3MjI0IC0zNC4zNDI5OTksMTUzLjUxOTc5IC0zMi45NjM1MjYsMTU0Ljc0OTMzIEMgLTMxLjU4NDA1MiwxNTUuOTc4ODggLTI4LjkxNDMzMiwxNTguNzMzMDYgLTI5LjExNTY0OCwxNjIuMTI2NjEgQyAtMjkuMzE2OTY0LDE2NS41MjAxNiAtMzIuMDc3OTQyLDE3MC45NTEyNyAtMzUuNDc2MTcxLDE3NC4zNDk1MSBDIC0zOC41OTU0OTEsMTcxLjIzMDE5IC00MC4wNzY3MDksMTY2LjQwNTQzIC00MC42MTM1NTMsMTYzLjAxMTg4IEMgLTQxLjE1MDM5NywxNTkuNjE4MzMgLTM4LjY2NzQ5MywxNTYuMTI2NDIgLTM3LjM5MjQ4OSwxNTQuNzQ5MzMgeiAiIHN0eWxlPSJmaWxsOiNkZmRlZmY7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIi8+DQo8L2c+DQo8ZyB0cmFuc2Zvcm09Im1hdHJpeCgwLjc4ODUxMywwLjc4ODUxMywtMC43ODg1MTMsMC43ODg1MTMsODEuMTI2MzQsMi4wODk2ODIpIj4NCjxwYXRoIGQ9Ik0gMTI2LjUzMTI1LDAuODEyNSBDIDEyMS4xMiwwLjk0MzU2MzY1IDExNS4wOTIyNSwzLjMwMzA4MDkgMTEwLjQzNzUsNi40MDYyNSBDIDk4LjM4ODIwMiwxNC40MzkxMTUgODUuMDYzOTE2LDI3LjE3MDg3MiA3My4wOTM3NSwzOS4xNTYyNSBDIDQ2Ljg4NTU5NSw0My4yOTc2NzQgMjIuNzY2MjU3LDU2LjcyODI2NiA1LjEyNSw3Mi42ODc1IEMgNS4xMTk2NTQzLDcyLjY5MjgxIDUuMDk4ODg4Miw3Mi43MTMxODkgNS4wOTM3NSw3Mi43MTg3NSBDIDUuMDg4ODEyNSw3Mi43MjQ1MzQgNS4wNjcyNDM1LDcyLjc0NDAyMiA1LjA2MjUsNzIuNzUgQyA1LjAxMjM4MTQsNzIuODE3NTc3IDQuOTY5ODU1Niw3Mi45MDIwMzcgNC45Mzc1LDcyLjk2ODc1IEMgNC45MzQ4MDUzLDcyLjk3NDkwMyA0LjkwODgwNzksNzIuOTkzNzMgNC45MDYyNSw3MyBDIDQuODMzNjE4NCw3My4xOTE0MzIgNC44MjUyMjQ5LDczLjQzNTcyNCA0Ljg3NSw3My42NTYyNSBDIDUuMTI0MTg2Niw3NC42NTE3MzEgNi40NzE3MTE4LDc1Ljg0NDQxNiA3LjUzMTI1LDc1Ljg3NSBDIDcuNTg1ODA3Nyw3NS44NzU1NiA3LjY2NTg4NjIsNzUuODQ5NTM1IDcuNzE4NzUsNzUuODQzNzUgQyA3Ljc1Mzc4MDEsNzUuODM5MTY1IDcuODA5NjM4OCw3NS44NTEzMTcgNy44NDM3NSw3NS44NDM3NSBDIDcuODY2OTk3OCw3NS44Mzc4MjUgNy44ODM0ODA5LDc1LjgxOTg5MyA3LjkwNjI1LDc1LjgxMjUgQyAxOC45MzQ2ODMsNzIuMjMxNTA5IDMyLjQzNTIzMyw2OC42MTIxOTUgNDMuMjgxMjUsNzAuMzQzNzUgQyA0MS41Njg4NjcsNzIuNzI3MjM5IDM5Ljg0Njc0Miw3NS40Njk2MTQgMzcuOTM3NSw3OC45MDYyNSBDIDM1LjEwMzgxMyw4NC4wMDY4ODMgMzIuMTI0MTM5LDg4LjY4NjYzOSAzNS43MTg3NSw5Mi4yODEyNSBDIDM5LjEzODk4Nyw5NS43MDE0ODkgNDMuOTkzMTE3LDkyLjg5NjE4NiA0OS4wOTM3NSw5MC4wNjI1IEMgNTIuNTMwMzg3LDg4LjE1MzI1NyA1NS4yNzI3NjEsODYuNDMxMTMzIDU3LjY1NjI1LDg0LjcxODc1IEMgNTkuMzg3ODA0LDk1LjU2NDc2NiA1NS43Njg0ODcsMTA5LjA2NTMyIDUyLjE4NzUsMTIwLjA5Mzc1IEMgNTIuMTgxOTU1LDEyMC4xMTA4MyA1Mi4xNjIyODEsMTIwLjEzNzUzIDUyLjE1NjI1LDEyMC4xNTYyNSBDIDUyLjE0MzIzLDEyMC4yMTQ5NCA1Mi4xNjA1OTUsMTIwLjMxMzgyIDUyLjE1NjI1LDEyMC4zNzUgQyA1Mi4xNTQ2NDUsMTIwLjQxMTk3IDUyLjE1NDkyOSwxMjAuNDkzNTggNTIuMTU2MjUsMTIwLjUzMTI1IEMgNTIuMjIxMzIsMTIxLjYxNzA1IDUzLjQ2Njk5OCwxMjIuOTgxMDIgNTQuNDY4NzUsMTIzLjE1NjI1IEMgNTQuNTU2MzYzLDEyMy4xNjkyNyA1NC42NTkxNzcsMTIzLjE2MTI0IDU0Ljc1LDEyMy4xNTYyNSBDIDU0Ljc3NDM1NSwxMjMuMTU0MzUgNTQuODIxMTM2LDEyMy4xNTk4NSA1NC44NDM3NSwxMjMuMTU2MjUgQyA1NS4wMTE1NTYsMTIzLjExNzc4IDU1LjE4MzczNywxMjMuMDE3MzMgNTUuMzEyNSwxMjIuODc1IEMgNzEuMjcxNzMzLDEwNS4yMzM3NCA4NC43MDIzMjYsODEuMTE0NDA1IDg4Ljg0Mzc1LDU0LjkwNjI1IEMgMTAwLjgyOTEzLDQyLjkzNjA4MyAxMTMuNTYwODgsMjkuNjExNzk4IDEyMS41OTM3NSwxNy41NjI1IEMgMTI0LjgyMzA2LDEyLjcxODUzIDEyNy4yNDAzMiw2LjM4OTc4ODIgMTI3LjE4NzUsMC44MTI1IEMgMTI2Ljk2OTY0LDAuODEwNDM2ODQgMTI2Ljc1MTIyLDAuODA3MTcyMjEgMTI2LjUzMTI1LDAuODEyNSB6ICIgc3R5bGU9ImZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDIzMDQpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIgdHJhbnNmb3JtPSJtYXRyaXgoMC42MzQxMDUsLTAuNjM0MTA1LDAuNjM0MTA1LDAuNjM0MTA1LC01Mi45OTMxNyw1MS42OTU5OCkiLz4NCjxwYXRoIGQ9Ik0gMTI2LjUzMTI1LDAuODEyNSBDIDEyMS4xMiwwLjk0MzU2MzY1IDExNS4wOTIyNSwzLjMw"
"MzA4MDkgMTEwLjQzNzUsNi40MDYyNSBDIDk4LjM4ODIwMiwxNC40MzkxMTUgODUuMDYzOTE2LDI3LjE3MDg3MiA3My4wOTM3NSwzOS4xNTYyNSBDIDM5LjUwNjkwNCw0My45MTI1NjUgMzIuNDM1MjMzLDY4LjYxMjE5NSA0My4yODEyNSw3MC4zNDM3NSBDIDQxLjU2ODg2Nyw3Mi43MjcyMzkgMzkuODQ2NzQyLDc1LjQ2OTYxNCAzNy45Mzc1LDc4LjkwNjI1IEMgMzUuMTAzODEzLDg0LjAwNjg4MyAzMi4xMjQxMzksODguNjg2NjM5IDM1LjcxODc1LDkyLjI4MTI1IEMgMzkuMTM4OTg3LDk1LjcwMTQ4OSA0My45OTMxMTcsOTIuODk2MTg2IDQ5LjA5Mzc1LDkwLjA2MjUgQyA1Mi41MzAzODcsODguMTUzMjU3IDU1LjI3Mjc2MSw4Ni40MzExMzMgNTcuNjU2MjUsODQuNzE4NzUgQyA1OS42MTExNDIsMTA0LjA5Nzk4IDc1LjUzMjAzNiwxMTMuOTk3OTEgODguODQzNzUsNTQuOTA2MjUgQyAxMDAuODI5MTMsNDIuOTM2MDgzIDExMy41NjA4OCwyOS42MTE3OTggMTIxLjU5Mzc1LDE3LjU2MjUgQyAxMjQuODIzMDYsMTIuNzE4NTMgMTI3LjI0MDMyLDYuMzg5Nzg4MiAxMjcuMTg3NSwwLjgxMjUgQyAxMjYuOTY5NjQsMC44MTA0MzY4NCAxMjYuNzUxMjIsMC44MDcxNzIyMSAxMjYuNTMxMjUsMC44MTI1IHogIiBzdHlsZT0iZmlsbDp1cmwoI2xpbmVhckdyYWRpZW50MjMxNCk7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIiB0cmFuc2Zvcm09Im1hdHJpeCgwLjYzNDEwNSwtMC42MzQxMDUsMC42MzQxMDUsMC42MzQxMDUsLTUyLjk5MzE3LDUxLjY5NTk4KSIvPg0KPC9nPg0KPHBhdGggZD0iTSAxMjUuNzU1NCwxLjg4ODczMSBDIDExMS40MzM2MSwzLjcxNDkxMSAxMDAuMzQ2OTQsMTYuNzY4OTI0IDc0LjIyNjQwMSw0MC4yODk1NjIgQyA3Ni4wMTQxNzMsNDQuNzI2MTQ4IDczLjI2NjMzOCw0NS44OTU0NTMgNjIuNjUyODE0LDU2LjQ1Mzg1NSBDIDUxLjk0NDA3MSw2Ny4xMDY5ODEgNDkuOTI1Nzk4LDY5LjQ1MDI0MiA0NC43OTkyNTUsNzEuMjg2MDMxIEMgNDEuMDIwNDYxLDc2Ljg5ODYwNCAzMi44NjQ3MTYsODUuMzY1NzExIDM0LjAzMzc4MSw5MS41NDkxOTEgQyAzOC4yOTY2MjksODEuMjE3ODgxIDQ2LjQ3NTM3NSw3Ni44NTQzNDkgNjcuNDUzMzAxLDU2LjkwMDAzIEMgNzguOTMzNTM2LDQ1Ljk3OTk2OCAxMTIuODc0NDEsNS41OTc2MzE5IDEyNS43NTU0LDEuODg4NzMxIHogIiBzdHlsZT0ib3BhY2l0eTowLjE4MDMyNzg5O2ZpbGw6I2YyZjJmMjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gMTI1Ljc1NTQsMS44ODg3MzEgQyAxMTEuNDMzNjEsMy43MTQ5MTEgMTAwLjM0Njk0LDE2Ljc2ODkyNCA3NC4yMjY0MDEsNDAuMjg5NTYyIEMgNzYuMDE0MTczLDQ0LjcyNjE0OCA3My4yNjYzMzgsNDUuODk1NDUzIDYyLjY1MjgxNCw1Ni40NTM4NTUgQyA1MS45NDQwNzEsNjcuMTA2OTgxIDQ5LjkyNTc5OCw2OS40NTAyNDIgNDQuNzk5MjU1LDcxLjI4NjAzMSBDIDQxLjAyMDQ2MSw3Ni44OTg2MDQgMzIuODY0NzE2LDg1LjM2NTcxMSAzNC4wMzM3ODEsOTEuNTQ5MTkxIEMgMzYuOTY0NTEzLDgwLjgzNzI3NyA0My44MTExNDMsNzYuMDkzMTQgNjQuNzg5MDcsNTYuMTM4ODIxIEMgNzYuMjY5MzA0LDQ1LjIxODc1OSAxMDEuNjQ2NTgsOC4yNjE4NjM1IDEyNS43NTU0LDEuODg4NzMxIHogIiBzdHlsZT0ib3BhY2l0eTowLjE4MDMyNzg5O2ZpbGw6I2YyZjJmMjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gMTI1Ljc1NTQsMS44ODg3MzEgQyAxMTEuNDMzNjEsMy43MTQ5MTEgOTkuMzk1NDI1LDE2LjM4ODMyIDczLjI3NDg5LDM5LjkwODk1NyBDIDc1LjA2MjY2Miw0NC4zNDU1NDQgNzIuNjk1NDMyLDQ1Ljg5NTQ1MyA2Mi4wODE5MDgsNTYuNDUzODU1IEMgNTEuMzczMTY1LDY3LjEwNjk4MSA0OS4zNTQ4OTEsNjguNDk4NzMyIDQ0LjIyODM0OCw3MC4zMzQ1MiBDIDQwLjQ0OTU1NSw3NS45NDcwOTMgMzIuODY0NzE2LDg1LjM2NTcxMSAzNC4wMzM3ODEsOTEuNTQ5MTkxIEMgMzguMjk2NjI5LDgxLjQwODE4MyA0NC41NzIzNTIsNzYuNjY0MDQ2IDY1LjU1MDI3OSw1Ni43MDk3MjcgQyA3Ny4wMzA1MTMsNDUuNzg5NjY1IDEwMi41OTgwOSw5LjU5Mzk3ODggMTI1Ljc1NTQsMS44ODg3MzEgeiAiIHN0eWxlPSJvcGFjaXR5OjAuMTgwMzI3ODk7ZmlsbDojZjJmMmYyO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSAxMjUuNzU1NCwxLjg4ODczMSBDIDExMS43MDMyMSw0LjQzMzgzMDcgOTkuODQ0NzQ5LDE2LjU2ODA1IDczLjcyNDIxNSw0MC4wODg2ODcgQyA3NS41MTE5ODcsNDQuNTI1Mjc0IDcyLjk2NTAyNyw0NS45ODUzMTggNjIuMzUxNTAzLDU2LjU0MzcxOSBDIDUxLjY0Mjc1OSw2Ny4xOTY4NDUgNDkuNDQ0NzU2LDY4Ljk0ODA1NiA0NC4zMTgyMTMsNzAuNzgzODQ1IEMgNDAuNTM5NDE5LDc2LjM5NjQxOCAzMy4zMTQwNCw4NS4yNzU4NDYgMzQuMDMzNzgxLDkxLjU0OTE5MSBDIDM5LjI4NTE0NCw4MC42ODkyNjQgNDUuMTExNTQyLDc3LjAyMzUwNiA2Ni4wODk0NjksNTcuMDY5MTg3IEMgNzcuNTY5NzA0LDQ2LjE0OTEyNSAxMDMuNDk2NzQsMTAuMjIzMDM0IDEyNS43NTU0LDEuODg4NzMxIHogIiBzdHlsZT0ib3BhY2l0eTowLjE4MDMyNzg5O2ZpbGw6I2YyZjJmMjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5l"
"Y2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gNS4xNzc1NDEsNzQuMDI5MzMxIEMgMjQuMTk4MjgyLDU3Ljg4MDAxNyA0NS41MjY3MzMsNDUuNzQ0MTA5IDcxLjEzNDY2MSw0MS4wNTA3NzEgQyA3My4wNzE5MDgsNDAuNTk1MjU2IDcyLjk2NDI4Myw0Mi4zOTk4NjIgNzEuMzQ5OTExLDQyLjgwNTM0NSBDIDQ3LjM0MTM4NSw0NS40MjIwMjYgMjUuNDYwODUxLDU4LjUxNzY3MSA1LjE3NzU0MSw3NC4wMjkzMzEgeiAiIHN0eWxlPSJmaWxsOiNmZWZlZmU7ZmlsbC1vcGFjaXR5OjAuNTQ0NzE1NDk7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIi8+DQo8cGF0aCBkPSJNIDUuMTc3NTQxLDc0LjAyOTMzMSBDIDI0LjE5ODI4Miw1Ny44ODAwMTcgNDUuNTI2NzMzLDQ1Ljc0NDEwOSA3MS4xMzQ2NjEsNDEuMDUwNzcxIEMgNzMuMDcxOTA4LDQwLjU5NTI1NiA3My4zOTQ3ODIsNDIuNzIyNzM3IDcxLjc4MDQxLDQzLjEyODIxOSBDIDQ3Ljc3MTg4NCw0NS43NDQ5IDI1LjQ2MDg1MSw1OC41MTc2NzEgNS4xNzc1NDEsNzQuMDI5MzMxIHogIiBzdHlsZT0iZmlsbDojZmVmZWZlO2ZpbGwtb3BhY2l0eTowLjM5MDI0Mzg5O2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA1LjE3NzU0MSw3NC4wMjkzMzEgQyAyNC4xOTgyODIsNTcuODgwMDE3IDQ1LjUyNjczMyw0NS43NDQxMDkgNzEuMTM0NjYxLDQxLjA1MDc3MSBDIDczLjA3MTkwOCw0MC41OTUyNTYgNzMuNTAyNDA2LDQzLjE1MzIzNiA3MS44ODgwMzUsNDMuNTU4NzE4IEMgNDcuODc5NTA5LDQ2LjE3NTM5OSAyNS40NjA4NTEsNTguNTE3NjcxIDUuMTc3NTQxLDc0LjAyOTMzMSB6ICIgc3R5bGU9ImZpbGw6I2ZlZmVmZTtmaWxsLW9wYWNpdHk6MC4yMzU3NzIzNTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gODIuODEzMTMzLDYxLjIyMjE2IEMgODMuNzM5OTQ1LDU4LjgwMDM2OSA3Ni4zNDYwNzEsNjkuMzI5OTkxIDczLjk4Mjk4LDc0LjQyMjkxMSBDIDcwLjY4NTU2MSw4MS41Mjk0ODggNzAuMTU1ODQ0LDkzLjMzNDAzIDY3LjAxMjM0MSw5Ny4yMzAyODMgQyA2My44MTg3ODUsOTkuMzc1OTA1IDYyLjc4OTkxNiw5MS44Nzg4MzMgNjEuMDcyMjgyLDg3LjkyMzk3NiBDIDYwLjUzMzY3Niw4Ny4wNDk5OTEgNTkuNjAxNDkxLDg3LjA2MTU1OSA1OS4zNTgwNyw4OC44NDQyMzQgQyA1OS42ODM5MDcsMTAwLjM1OTA3IDU3LjQxOTMyLDEwNy41MDcyNCA1NC4xNTg1MzgsMTE3Ljk5NzMzIEMgNTMuNTEyODgxLDExOC44MzI4MyA1NS40MjU0ODksMTE5Ljg2NTEyIDU1LjY2NTM4NSwxMTguODMxMTIgQyA2OS40MDIxMjQsMTAxLjE2MjA2IDc5LjAwMDc3Nyw4NC44NDM3MjkgODIuODEzMTMzLDYxLjIyMjE2IHogIiBzdHlsZT0ib3BhY2l0eTowLjI5NTA4MjtmaWxsOnVybCgjbGluZWFyR3JhZGllbnQyMzYxKTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gNS4xNzc1NDEsNzQuMDI5MzMxIEMgMjQuMTk4MjgyLDU3Ljg4MDAxNyA0NS41MjY3MzMsNDUuNzQ0MTA5IDcxLjEzNDY2MSw0MS4wNTA3NzEgQyA3My4wNzE5MDgsNDAuNTk1MjU2IDc0LjA0MDUzMSw0My43OTg5ODUgNzIuNDI2MTU5LDQ0LjIwNDQ2NyBDIDQ4LjQxNzYzMyw0Ni44MjExNDggMjUuNDYwODUxLDU4LjUxNzY3MSA1LjE3NzU0MSw3NC4wMjkzMzEgeiAiIHN0eWxlPSJmaWxsOiNmZWZlZmU7ZmlsbC1vcGFjaXR5OjAuMTM4MjExMzY7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIi8+DQo8cGF0aCBkPSJNIDg0LjU4NDIzOSw2MC4yMzgyMTEgQyA4NS41MTEwNTEsNTcuODE2NDIxIDc1LjU1ODkxMiw2OC45MzY0MTIgNzMuMTk1ODIxLDc0LjAyOTMzMSBDIDY5Ljg5ODQwMiw4MS4xMzU5MDkgNjMuNTc3MDc1LDg5LjMyMDU2OCA2MS44NTk0NDEsODUuMzY1NzExIEMgNjEuMzIwODM1LDg0LjQ5MTcyNiA1OS4wMTExMjIsODUuMDkzNjYzIDU4Ljc2NzcwMSw4Ni44NzYzMzcgQyA1OS4wOTM1MzgsOTguMzkxMTc1IDU1Ljg0NTAwMywxMDguODg0NzYgNTIuNTg0MjIxLDExOS4zNzQ4NSBDIDUxLjkzODU2NCwxMjAuMjEwMzUgNTQuODM1MTIsMTIxLjQzOTQzIDU1LjA3NTAxNiwxMjAuNDA1NDMgQyA2OC44MTE3NTUsMTAyLjczNjM3IDgwLjc3MTg4NCw4My44NTk3ODEgODQuNTg0MjM5LDYwLjIzODIxMSB6ICIgc3R5bGU9Im9wYWNpdHk6MC41Njk2NzIxMTtmaWxsOnVybCgjbGluZWFyR3JhZGllbnQyMzY0KTtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gMTA5LjQ3MTE3LDcuMTkwMjEzIEwgMTE0LjkzOTE4LDEyLjc1MTY5NyBMIDEwNC4wNDk4OCwyMy41MDA3ODMgTCA5Ny40MTM0ODcsMTYuMjU2ODMzIEMgMTAxLjIzNjQsMTMuMDM4MzEzIDEwNS4yNzQ1NywxMC4wMzUwNTEgMTA5LjQ3MTE3LDcuMTkwMjEzIHogIiBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eTowLjQ1OTM0OTYzO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9w"
"YWNpdHk6MSIvPg0KPHBhdGggZD0iTSAxMDQuMDA0MzYsMjMuNTA3NTg3IEwgMTEwLjg3ODA4LDMwLjkxMDA1OSBDIDEwNy4xOTE5MywzNS4zMzc1MDMgMTAzLjI2ODQ4LDM5LjYyOTMzOCA5OS4yNDU2MjcsNDMuODY0MzgzIEwgOTEuODQzMTU1LDM1LjY2ODc5IEwgMTA0LjAwNDM2LDIzLjUwNzU4NyB6ICIgc3R5bGU9ImZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDIzNTcpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA4NC41NDIzNTEsMjcuNjc4OTkzIEwgOTEuNzkzMDY0LDM1LjY5MDgzMiBMIDc5LjEzNDM2LDQ4LjIyOTM1NyBMIDc0LjI0NzEzOCw0My4xMDE3ODIgQyA3NC41MTU5MjIsNDAuNjQ2MzcgNzMuMDU2MDY4LDM5Ljc1MDY0NSA3MS43MjM0MSw0MC4yOTc2MzggQyA3NS43Mjc3MzQsMzYuMTM4ODIyIDc5LjkyNjAyLDMxLjgzNjI0NCA4NC41NDIzNTEsMjcuNjc4OTkzIHogIiBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eTowLjQ1OTM0OTYzO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA4Ny4wNTU4NjUsNTYuMjgyMDQ1IEMgODcuMDY4NjUsNjguNjEyNzQ0IDcxLjA4MTQsMTAzLjIyNTQ5IDY4LjIwNzMwMSwxMDEuNzc2NTUgQyA2Ny40MDEwMzgsMTAwLjM1NjIzIDcwLjc2MjUwNSw5Ni44NzQ3NzggNzEuOTUwMTI4LDg3LjYzMTk4MiBDIDcxLjk1MDEyOCw4NC43MTI2MTkgNjkuNTEzOTQ3LDgwLjcwMTQwOCA2Ni4yNTM3NjgsODEuNzkyMTg5IEMgNjQuNjY1MjgxLDgyLjMyMzY2IDU5LjM5MzIyMSw5NC40MTM3NDkgNTcuODYwOTQ2LDkyLjg4MTQ3NCBDIDU4LjQ2MDM1OCw4OS4wMDI5MjIgNTkuMDU5NzcxLDg1LjEyNDM2OSA1OS42NTkxODMsODEuMjQ1ODE3IEMgNjAuMTkyNjU4LDc5LjkxMzE2MiA4NS4wOTY2MDksNTUuMDM2NzIxIDg3LjA1NTg2NSw1Ni4yODIwNDUgeiAiIHN0eWxlPSJmaWxsOnVybCgjbGluZWFyR3JhZGllbnQyMzg3KTtmaWxsLW9wYWNpdHk6MS4wO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA4Ni44NjU3ODMsNTYuMzIxMzE0IEMgODIuMTg2NTUxLDU5LjE1MTgwOSA3Ny40MDc3Nyw2NS4yMDk5NTkgNzIuNjg0ODMxLDY5LjY2MTAyNSBMIDY1LjU1NDI5NCw2MS44ODk1NDIgTCA3OS4xNzQ0MTksNDguMjI5MzU3IEwgODYuODY1NzgzLDU2LjMyMTMxNCB6ICIgc3R5bGU9ImZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDIzNTMpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA2MS4yNjc5NjEsNTcuMjgyNzM1IEwgNjUuNDc0MTc2LDYxLjkyOTYwMSBMIDQ5LjQ1MDQ5OSw3Ny43MTI5MjIgTCA0My4yODEzODUsNzEuNTAzNzQ3IEwgNDQuMDAyNDQ5LDcwLjM4MjA5IEMgNDcuOTUzNzQ0LDY5LjQ5MzEwMyA1MS42NzYzODEsNjYuNzI1ODIzIDU0LjQ5Nzk1OCw2NC4wOTI3OTcgTCA2MS4yNjc5NjEsNTcuMjgyNzM1IHogIiBzdHlsZT0iZmlsbDojZmZmZmZmO2ZpbGwtb3BhY2l0eTowLjQ1OTM0OTYzO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA0OS40MTA0NDEsNzcuNzEyOTIyIEwgNTUuNjE5NjE1LDg0LjA0MjI3NCBMIDU2LjIyMDUwMyw4NS43MjQ3NiBDIDUzLjEwNjcxLDg4LjE2NTg0MSA0OS40MzQ4NjYsOTAuMDQ4ODcyIDQ1LjkyNTI5MSw5Mi4wOTQxNzEgTCA0MC4zMTcwMDUsODYuODA2MzU4IEwgNDkuNDEwNDQxLDc3LjcxMjkyMiB6ICIgc3R5bGU9ImZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDIzNDkpO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSA3MS42NDM0Miw0Ni43OTk5MDkgQyA3MS42NDM0Miw0Ni43OTk5MDkgNTQuNDM0NTM1LDY0LjA1OTEzMiA1Mi4xOTY3NDYsNjYuMDc0NDE5IEMgNTAuMzI3ODAyLDY3Ljc1NzUzMyA0NS43ODMyNDMsNzAuNTgyNjk0IDQzLjgxMjQ0Nyw3MC4yMjgxMzUgQyAzMi43NTk2OSw2OC4yMzk2NyAyMi4xNDMxLDcxLjY0MjA3NiAyMi4xNDMxLDcxLjY0MjA3NiBDIDMyLjgyMzUwOSw1Ny42NjI4OTkgNTEuOTM1NDAzLDUxLjkzOTU1MiA3MS42NDM0Miw0Ni43OTk5MDkgeiAiIHN0eWxlPSJvcGFjaXR5OjAuNDk1OTAxNjc7ZmlsbDp1cmwoI3JhZGlhbEdyYWRpZW50MjM0Nik7ZmlsbC1vcGFjaXR5OjE7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIi8+DQo8cGF0aCBkPSJNIDQwLjM0NjA0NCw4Ni43NjgwODggTCAzNS4zMTEwNTUsODIuMDc2MDQgQyAzMy4zNzQyNjEsODUuNzUyOTkgMzEuMTI5MjIzLDg5LjcxMTczNiAzMy45MzkyOTQsOTIuOTcyMTkzIEwgNDAuMzQ2MDQ0LDg2Ljc2ODA4OCB6ICIgc3R5bGU9ImZpbGw6I2ZmZmZmZjtmaWxsLW9wYWNpdHk6MC4zNDk1OTM1MjtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gMTI1Ljc1"
"NTQsMS44ODg3MzEgQyAxMTEuNzAzMjEsNC40MzM4MzA3IDEwMC43Nzk3OSwxNy4wMzU1NyA3NC42NTkyNTYsNDAuNTU2MjA4IEMgNzYuNDQ3MDI4LDQ0Ljk5Mjc5NCA3Mi45NjUwMjcsNDYuNjg2NTk5IDYyLjM1MTUwMyw1Ny4yNDUgQyA1MS42NDI3NTksNjcuODk4MTI2IDQ5LjQ0NDc1Niw2OC45NDgwNTYgNDQuMzE4MjEzLDcwLjc4Mzg0NSBDIDQwLjUzOTQxOSw3Ni4zOTY0MTggMzMuMzE0MDQsODUuMjc1ODQ2IDM0LjAzMzc4MSw5MS41NDkxOTEgQyAzNy44ODI1ODIsODAuNjg5MjY0IDQyLjQ5OTMsNzUuNDM1MzgyIDY0LjY4NjkwNyw1Ni44MzU0MjcgQyA3OC4yNzA5ODQsNDUuNDQ3ODQ1IDEwMy4wMjkyMiw4LjU4NjcxMjIgMTI1Ljc1NTQsMS44ODg3MzEgeiAiIHN0eWxlPSJvcGFjaXR5OjAuNjM1MjQ2MDc7ZmlsbDojZjJmMmYyO2ZpbGwtb3BhY2l0eToxO2ZpbGwtcnVsZTpldmVub2RkO3N0cm9rZTpub25lO3N0cm9rZS13aWR0aDoxcHg7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW9wYWNpdHk6MSIvPg0KPHBhdGggZD0iTSAxMjUuNzU1NCwxLjg4ODczMSBDIDExMS43MDMyMSw0LjQzMzgzMDcgMTAwLjE0NDYyLDE2LjQ3OTc5OSA3NC4wMjQwODksNDAuMDAwNDM3IEMgNzUuODExODYxLDQ0LjQzNzAyMyA3Mi44MDYyMzUsNDYuNTI3ODA3IDYyLjE5MjcxMSw1Ny4wODYyMDggQyA1MS40ODM5NjgsNjcuNzM5MzM0IDQ5LjQ0NDc1Niw2OC45NDgwNTYgNDQuMzE4MjEzLDcwLjc4Mzg0NSBDIDQwLjUzOTQxOSw3Ni4zOTY0MTggMzMuMzE0MDQsODUuMjc1ODQ2IDM0LjAzMzc4MSw5MS41NDkxOTEgQyA0MS44NTY1MDYsODIuNTU5MzQ1IDQ1LjA3MDY2Miw3Ny41MzkyMjQgNjcuMjU4MjY5LDU4LjkzOTI2OCBDIDgwLjg0MjM0Niw0Ny41NTE2ODYgMTA3LjAwMzE0LDEzLjAyODE1NiAxMjUuNzU1NCwxLjg4ODczMSB6ICIgc3R5bGU9Im9wYWNpdHk6MC40NzEzMTE1O2ZpbGw6I2YyZjJmMjtmaWxsLW9wYWNpdHk6MTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6bm9uZTtzdHJva2Utd2lkdGg6MXB4O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjEiLz4NCjxwYXRoIGQ9Ik0gNzEuNjU5ODc3LDQwLjE5NzQzMyBDIDcyLjgzMjcxNiwzOS45OTY0NDUgNzMuNjc1MTgzLDQwLjI3MjY2IDc0LjA1MTM4Nyw0MS4yMjIzNjYgQyA3NC41OTY4NTIsNDIuNTA3NjkyIDc0LjEwNjE5OSw0My42OTM3ODYgNzMuNzk1MTUzLDQ0LjI5NzE2NCBDIDY5LjUwMjE4Nyw1MS40OTE3MTcgNTkuOTg0NTUzLDU4LjM0MDExOSA1Mi45NTQ4NTYsNjUuMzA4Mjg0IEwgMzguMzQ5NTY1LDYzLjAwMjE4NSBMIDM5LjM3NDQ5Nyw1MC4wMTk3MDUgQyA1MC40MzgyMTEsNDUuNzM5MjE0IDYxLjI3NzU4NSw0Mi4yMDY1MTggNzEuNjU5ODc3LDQwLjE5NzQzMyB6ICIgc3R5bGU9ImZpbGw6dXJsKCNsaW5lYXJHcmFkaWVudDIzMzgpO2ZpbGwtb3BhY2l0eToxLjA7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOm5vbmU7c3Ryb2tlLXdpZHRoOjFweDtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxIi8+DQo8cGF0aCBkPSJNIDcxLjQxNTI1MSw0MC4xODc2NDYgQyA3MS40MTcwMTcsNDAuMTU3NDQ5IDc2LjEzMTkzNiwzNS42MDg5NjYgODIuNDYzNzU4LDI5Ljc2MzM2NiBDIDg4Ljc5NTU4MSwyMy45MTc3NjUgOTkuNDUyMTAyLDE0LjQ2NDY0NyAxMDMuMjEzNjksMTEuNTU2Mzc3IEMgMTEzLjEwNzk4LDMuOTA2NjE3MSAxMjAuNDM0NDMsMS44NDgwODcxIDEyNS43NjE3MiwxLjk0MzYxNTIgQyAxMjUuNTAyODYsNC41NTA5NDUyIDEyNi41MDQ2NiwxMC44OTg1NTcgMTE1LjY2ODA0LDI0LjkyMDg1IEMgMTAzLjg4MzY2LDQwLjE4Mjc3OSA3OS4zMDYwNzksNjMuMjYyOTI5IDc5LjMwNjA3OSw2My4yNjI5MjkiIHN0eWxlPSJmaWxsOm5vbmU7ZmlsbC1vcGFjaXR5OjAuNzU7ZmlsbC1ydWxlOmV2ZW5vZGQ7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjAuMTtzdHJva2UtbGluZWNhcDpidXR0O3N0cm9rZS1saW5lam9pbjptaXRlcjtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lIi8+DQo8cGF0aCBkPSJNIDcxLjcwNTExNCw0MC40Nzc1MDggQyA3MS42NzI3ODksNDAuNDM1OTQ4IDc2LjM0MTE3LDM1LjYzMjE0IDgyLjY1Njk2NSwyOS43OTM3NDYgQyA4OC45NzI3NTksMjMuOTU1MzUyIDk2LjgxNTE3OCwxNi44NzA5OSAxMDMuNDQ0OTcsMTEuODIxNDk4IEMgMTEzLjkyNDgsMy44Mzk2NzU0IDExOS4zNjUxOCwyLjM0MzU5NyAxMjUuNTEzOTcsMi4xMzkyMTEyIEMgMTI1LjI1NTExLDQuNzQ2NTQxMiAxMjYuMjY5OTQsMTAuNzgxMTk5IDExNS40MzMzMiwyNC44MDM0OTIgQyAxMDMuNjQ4OTQsNDAuMDY1NDIxIDgwLjIxMTg5OSw2My44MDY0MjEgODAuMjExODk5LDYzLjgwNjQyMSIgc3R5bGU9ImZpbGw6bm9uZTtmaWxsLW9wYWNpdHk6MC43NTtmaWxsLXJ1bGU6ZXZlbm9kZDtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MC40O3N0cm9rZS1saW5lY2FwOmJ1dHQ7c3Ryb2tlLWxpbmVqb2luOm1pdGVyO3N0cm9rZS1vcGFjaXR5OjAuMjAzMjUyMDM7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmUiLz4NCjwvZz4NCjwvc3ZnPg0K";
    }
    iNotificationSession->setNotificationUi(iNotificationSession->isNotificationUi(), iIconData);
}

bool NotificationExample::initialize()
{
    iNotificationSession = NULL;
    bool success = false;

    QPluginLoader *loader = new QPluginLoader(ONE_PLUGIN_ABSOLUTE_PATH);
    QObject *serviceObject = loader->instance();
    delete loader;

    if (serviceObject)
    {
        success = true;

        // Store the service interface for later usage
        iNotificationSession = static_cast<OviNotificationSession *>(
            serviceObject);

        // Connext signals to slots.
        connect(serviceObject,SIGNAL(stateChanged(QObject*)),
                this,SLOT(stateChanged(QObject*)));
        connect(serviceObject,SIGNAL(received(QObject*)),
                this,SLOT(received(QObject*)));
        connect(serviceObject,SIGNAL(notificationInformation(QObject*)),
                this,SLOT(notificationInfo(QObject*)));
        connect(serviceObject,SIGNAL(version(QString)),
                this,SLOT(versionResponse(QString)));
    }
    else
    {
        // There was problem loading the Notifications Enabler. Check loader->errorString()
        // for more details.
        success = false;
    }

    return success;
}

void NotificationExample::stateChanged(QObject* aState)
{
    // State of the application has changed
    OviNotificationState* state = static_cast<OviNotificationState*>(aState);

    // Print out the session state on the screen
    switch (state->sessionState())
    {
        case OviNotificationState::EStateOffline:
        {
            displayErrorbox("Application is offline.");
            break;
        }
        case OviNotificationState::EStateOnline:
        {
            displayErrorbox("Application is online.");
            //ui->notificationUiCheckBox->setChecked(iNotificationSession->isNotificationUi());
            //ui->wakeupCheckBox->setChecked(iNotificationSession->isWakeUp());
            break;
        }
        case OviNotificationState::EStateConnecting:
        {
            displayErrorbox("Application is connecting.");
            break;
        }
        default:
        {
            break;
        }
    }

    // Print out the error, if there is any
    if (state->sessionError() != OviNotificationState::EErrorNone)
    {
        displayErrorbox("Error " + state->sessionErrorString() + " occured!");
    }
    delete state;
}

void NotificationExample::received(QObject* aNotification)
{
    // Casting the QObject to OviNotificationMessage to gain access
    // to all its members.
    OviNotificationMessage* notification =
            static_cast<OviNotificationMessage*>(aNotification);

    // Show the received notification in the screen
    OviNotificationPayload*  payload =  static_cast<OviNotificationPayload*>(notification->payload());
    displayErrorbox("Notification received!");
    displayErrorbox("Application " + notification->senderInformation()
                            + " of the service "+notification->from()+ " service sent: \n"
                            + "'" + payload->dataString() + "'");
    // Printing out the notification details in text console. Optional.
    displayErrorbox("Notification received.");
    displayErrorbox("Notification was sent at " + notification->timestamp());
    if (!payload->type().isEmpty())
    {
        displayErrorbox("Payload type was set to " + payload->type());
    }
    if (!payload->encoding().isEmpty())
    {
        displayErrorbox("Payload was encoded in " + payload->encoding());
    }

    delete payload;
    delete notification;

}

void NotificationExample::versionResponse(QString aVersion)
{
    displayErrorbox("Version :" + aVersion);
}

void NotificationExample::notificationInfo(QObject* aData)
{
    // Cast QObject to OviNotificationInfo to access the methods
    OviNotificationInfo* info = static_cast<OviNotificationInfo*>(aData);
    displayErrorbox("Notification Id: " + info->notificationId());
    // store NID for later usage
    iNotificationId = info->notificationId();
    delete info;
}

void NotificationExample::sslErrors(QNetworkReply * reply, const QList<QSslError> &)
{
    reply->ignoreSslErrors();
}

void NotificationExample::resizeEvent (QResizeEvent* )
{
    //showMaximized();
}

// End of file
